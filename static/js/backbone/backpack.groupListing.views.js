// ensure we can listen to backbone events generated by Group objects
_.extend(window, Backbone.Events);

/**
 * View for groups as list items
 */
GroupListingView = Backbone.View.extend({
  parent: $('.groups'),
  /**
   * Render this view to the page
   */
  render: function() {
    var values = this.model.toJSON(),
        html = env.render('Backpack.Group.ListingView.html', values);
    this.setElement($(html));
    this.setupUX();
    return this;
  },

  enableButton: function(){},

  /**
   * Set up the UX for this view's element(s),
   * tied to a specific controller for the logic.
   */
  setupUX: function() {
    var $el = this.$el,
        view = this;
        controller = this.controller;
    var createButton = $el.find("button.create"),
        creating = false,
        nogroup = $el.find(".noGroups"),
        editViews = 0;
        
    this.enableButton = function() { creating = false; createButton.fadeIn(); };

    /**
     * When the create button is clicked, load a
     * "new group" template, and bind save/cancel
     * behaviour to the button/link span.
     */
    createButton.click(function(btn) {
      if(creating) return;
      createButton.hide();
      nogroup.hide();

      var newGroup = controller.createGroup();
      newGroup.asEditableEntry();
      var $el = newGroup.currentView.$el;
      $(".groups .listing").append($el);
    });

    // Track group actions that warrant UI changes:
    window.on("group-saved",      function() { nogroup.remove();    });
    window.on("group-cancelled",  function() { nogroup.show();      });

    // Track open "edit" views:
    window.on("group-edit-start", function() { editViews++; createButton.hide(); });
    window.on("group-edit-end",   function() { if (--editViews==0) { view.enableButton(); }});
  },
  
  /**
   * If loaded with groups, remove the "you have no groups" notice.
   */
  removeNoGroupNotice: function() {
    this.$el.find(".noGroups").remove();
  },

  /**
   * Cancelling an edit means we must show the
   * "create group" button again.
   */
  editCancelled: function(group) {
    this.enableButton();
  }
});